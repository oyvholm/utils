#!/usr/bin/env perl

#==============================================================================
# ustr
# File ID: 3c899bbc-5d49-11df-b62a-90e6ba3022ac
#
# Inserts a COMBINING LOW LINE (U+0332, "◌̲") after every character except 
# newline (\n).
#
# Character set: UTF-8
# ©opyleft 2004– Øyvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later, see end of file for 
# legal stuff.
#==============================================================================

use strict;
use warnings;
use utf8;
use Getopt::Long;
use open ':std', ':encoding(UTF-8)';

local $| = 1;

our %Opt = (

    'delete' => 0,
    'help' => 0,
    'quiet' => 0,
    'space' => 0,
    'strikethrough' => 0,
    'verbose' => 0,
    'version' => 0,

);

our $progname = $0;
$progname =~ s/^.*\/(.*?)$/$1/;
our $VERSION = '0.3.0';

Getopt::Long::Configure('bundling');
GetOptions(

    'delete|d' => \$Opt{'delete'},
    'help|h' => \$Opt{'help'},
    'quiet|q+' => \$Opt{'quiet'},
    'space|S' => \$Opt{'space'},
    'strikethrough|s' => \$Opt{'strikethrough'},
    'verbose|v+' => \$Opt{'verbose'},
    'version' => \$Opt{'version'},

) || die("$progname: Option error. Use -h for help.\n");

$Opt{'verbose'} -= $Opt{'quiet'};
$Opt{'help'} && usage(0);
if ($Opt{'version'}) {
    print_version();
    exit(0);
}

exit(main());

sub main {
    my $Retval = 0;
    my $combchar = "\x{0332}";
    my $space = $Opt{'space'} ? "" : " ";

    if ($Opt{'strikethrough'}) {
        $combchar = "\x{0336}";
    }
    if ($Opt{'delete'}) {
        while (<>) {
            s/$combchar//g;
            print;
        }
    } else {
        while (<>) {
            s/([^\n$space])/$1$combchar/g;
            print;
        }
    }

    return $Retval;
}

sub print_version {
    # Print program version
    print("$progname $VERSION\n");
    return;
}

sub usage {
    # Send the help message to stdout
    my $Retval = shift;

    if ($Opt{'verbose'}) {
        print("\n");
        print_version();
    }
    print(<<"END");

Usage: $progname [options] [file [files [...]]]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -s, --strikethrough
    Use strikethrough (U+0336, '1̶2̶3̶ a̶b̶c̶') instead of underline.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  -S, --space
    Also underline/overstrike space characters (U+0020).
  --version
    Print version information.

END
    exit($Retval);
}

sub msg {
    # Print a status message to stderr based on verbosity level
    my ($verbose_level, $Txt) = @_;

    $verbose_level > $Opt{'verbose'} && return;
    print(STDERR "$progname: $Txt\n");
    return;
}

__END__

# This program is free software; you can redistribute it and/or modify it under 
# the terms of the GNU General Public License as published by the Free Software 
# Foundation; either version 2 of the License, or (at your option) any later 
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT 
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
# FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with 
# this program.
# If not, see L<http://www.gnu.org/licenses/>.

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
