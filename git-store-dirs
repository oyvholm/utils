#!/bin/sh

#==============================================================================
# git-store-dirs
# File ID: 8853c3a0-6be6-11df-8fcb-90e6ba3022ac
#
# Store a list of all directories to $dirfile to be able to restore empty 
# directories. The list is \0-separated in case there are some directory names 
# containing (ugh) \n. Use git-restore-dirs(1) to recreate directories.
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#==============================================================================

progname=git-store-dirs
VERSION=0.3.0

opt_help=0
opt_local=0
opt_quiet=0
opt_verbose=0
while test -n "$1"; do
	case "$1" in
	-h|--help) opt_help=1; shift ;;
	-l|--local) opt_local=1; shift ;;
	-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
	-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
	--version) echo $progname $VERSION; exit 0 ;;
	--) shift; break ;;
	*)
		if printf '%s\n' "$1" | grep -q ^-; then
			echo "$progname: $1: Unknown option" >&2
			exit 1
		else
			break
		fi
	break ;;
	esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

dirfile=.emptydirs

if test "$opt_help" = "1"; then
	test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
	cat <<END

Store a list of all directories to $dirfile to be able to restore empty 
directories. The list is \\0-separated in case there are some directory 
names containing (ugh) \\n. Use git-restore-dirs(1) to recreate 
directories.

Usage: $progname [options]

Options:

  -h, --help
    Show this help.
  -l, --local
    Create $dirfile in the current subdirectory.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
	exit 0
fi

if test "$opt_local" != "1"; then
	test -d .git/. || {
		echo -n "$progname: Has to be run from the toplevel " >&2
		echo of the working tree >&2
		exit 1
	}
fi
find . -type d -empty -print0 |
    grep -E -v -z '/\.git(/|$)' |
    LC_ALL=C sort -z >$dirfile
test "$(cat $dirfile)" = "" &&
	(
		git reset $dirfile
		rm $dirfile
		echo "$0: No empty directories found, deleting $dirfile" >&2
	) || git add $dirfile

# vim: set ts=8 sw=8 sts=8 noet fo+=w tw=79 fenc=UTF-8 :
