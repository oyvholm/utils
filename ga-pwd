#!/usr/bin/env perl

#=======================================================================
# ga-pwd
# File ID: b213e514-0d5f-11e6-9cac-fefdb24f8e10
#
# Print name of current directory with user name and/or tilde
#
# Character set: UTF-8
# ©opyleft 2016– Øyvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later, see end of 
# file for legal stuff.
#=======================================================================

use strict;
use warnings;
use Getopt::Long;
use Cwd 'abs_path';

local $| = 1;

our %Opt = (

    'help' => 0,
    'hostname' => 0,
    'quiet' => 0,
    'username' => 0,
    'verbose' => 0,
    'version' => 0,

);

our $progname = $0;
$progname =~ s/^.*\/(.*?)$/$1/;
our $VERSION = '0.2.0';

Getopt::Long::Configure('bundling');
GetOptions(

    'help|h' => \$Opt{'help'},
    'hostname|H' => \$Opt{'hostname'},
    'quiet|q+' => \$Opt{'quiet'},
    'username|u' => \$Opt{'username'},
    'verbose|v+' => \$Opt{'verbose'},
    'version' => \$Opt{'version'},

) || die("$progname: Option error. Use -h for help.\n");

$Opt{'verbose'} -= $Opt{'quiet'};
$Opt{'help'} && usage(0);
if ($Opt{'version'}) {
    print_version();
    exit(0);
}

exit(main());

sub main {
    # {{{
    my $Retval = 0;
    my $abs_path = abs_path('.');
    my $home_path = abs_path($ENV{'HOME'});
    my $outpath = $abs_path;

    if ($Opt{'username'}) {
        print(getpwuid($<) . '@');
        $outpath =~ s/^$home_path/~/;
    }
    chomp(my $hostname = `hostname`);
    if ($abs_path =~ /^\/media\//) {
        $Opt{'hostname'} && print($hostname . ':');
        printf("%s\n", $abs_path);
        return $Retval;
    }
    print("$hostname:$outpath\n");

    return $Retval;
    # }}}
} # main()

sub print_version {
    # Print program version {{{
    print("$progname $VERSION\n");
    return;
    # }}}
} # print_version()

sub usage {
    # Send the help message to stdout {{{
    my $Retval = shift;

    if ($Opt{'verbose'}) {
        print("\n");
        print_version();
    }
    print(<<"END");

Print path of current directory, using the format "host:pwd". Use the 
"physical" directory location, ignore parent symlinks.

If the current directory is below \$HOME and -u/--username is specified, 
replace the first part with '~'.

If the current directory is below /media/, don't print username or 
hostname by default.

Usage: $progname [options]

Options:

  -H, --hostname
    Include hostname in output even under "/media/".
  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -u, --username
    Include local user name in output.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit($Retval);
    # }}}
} # usage()

sub msg {
    # Print a status message to stderr based on verbosity level {{{
    my ($verbose_level, $Txt) = @_;

    if ($Opt{'verbose'} >= $verbose_level) {
        print(STDERR "$progname: $Txt\n");
    }
    return;
    # }}}
} # msg()

__END__

# This program is free software; you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation; either version 2 of the License, or (at 
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License 
# along with this program.
# If not, see L<http://www.gnu.org/licenses/>.

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
