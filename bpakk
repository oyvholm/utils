#!/bin/sh

#==============================================================================
# bpakk
# File ID: 2a4e251e-7b6f-11df-b25f-00219bfade9b
#
# Pack stdin with gzip and encapsulate it in base64.
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#==============================================================================

progname=bpakk
VERSION=0.0.0

std_size=8

opt_decode=0
opt_help=0
opt_quiet=0
opt_size=$std_size
opt_verbose=0

while test -n "$1"; do
	case "$1" in
	-d|--decode) opt_decode=1; shift ;;
	-h|--help) opt_help=1; shift ;;
	-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
	-s|--size) opt_size="$2"; shift 2 ;;
	-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
	--version) echo $progname $VERSION; exit 0 ;;
	--) shift; break ;;
	*)
		if printf '%s\n' "$1" | grep -q ^-; then
			echo "$progname: $1: Unknown option" >&2
			exit 1
		else
			break
		fi
	break ;;
	esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
	test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
	cat <<END

Pack stdin with gzip and encapsulate it in base64.

Usage: $progname [options]

Options:

  -d, --decode
    Decode gzipped base64.
  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -s SIZE, --size SIZE
    Create base64 using SIZE character chunks. To get one long chunk, 
    use 0. Default: $std_size.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
	exit 0
fi

if [ "$opt_decode" = "1" ]; then
	base64 -di | gunzip --stdout --force
	exit
fi

gzip -9 | base64 -w $opt_size | tr '\n' ' ' | sed 's/ $//'
echo

# vim: set ts=8 sw=8 sts=8 noet fo+=w tw=79 fenc=UTF-8 :
