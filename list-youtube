#!/usr/bin/env bash

#=======================================================================
# list-youtube
# File ID: c5f8c456-f24a-11e2-a3f1-001f3b596ec9
#
# Sort videos downloaded by youtube-dl in chronological order
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=list-youtube
VERSION=0.2.0

ARGS="$(getopt -o "\
f\
h\
q\
v\
" -l "\
filenames,\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_filenames=0
opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        -f|--filenames) opt_filenames=1; shift ;;
        -h|--help) opt_help=1; shift ;;
        -q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        -v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        --version) echo $progname $VERSION; exit 0 ;;
        --) shift; break ;;
        *) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Sort videos downloaded by youtube-dl in chronological order

Usage: $progname [options]

Options:

  -f, --filenames
    List filenames instead of the default format with date and title. 
    Useful for creating playlists.
  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

if test "$opt_filenames" = "1"; then
    ls *.info.json | while read f; do
        echo $(
            json_reformat <"$f" |
            grep -e '"upload_date"' |
            perl -pe 's/^.*"upload_date": "(\d+)".*$/$1/'
        ).$f;
    done |
    grep . |
    sort |
    perl -pe 's/\.info\.json$/.mp4/' |
    cut -f 2- -d .
else
    ls *.info.json | while read f; do
        echo $(json_reformat <"$f" | grep -e '"title"' -e '"upload_date"' -e '"uploader"');
    done | grep . | sort
fi
