#!/usr/bin/env bash

#==============================================================================
# randsleep
# File ID: 23f387f0-7b1d-11ea-94a3-db5caa6d21d3
#
# Sleep for a random amount of time.
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#==============================================================================

progname=randsleep
VERSION=0.1.0

ARGS="$(getopt -o "\
h\
q\
v\
" -l "\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
	case "$1" in
		-h|--help) opt_help=1; shift ;;
		-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
		-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
		--version) echo $progname $VERSION; exit 0 ;;
		--) shift; break ;;
		*) echo $progname: Internal error >&2; exit 1 ;;
	esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
	test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
	cat <<END

Sleep for a random amount of time.

Usage: $progname [options] [MIN_SECS [RANDOM_SECS]]

Sleep for MIN_SECS + RANDOM_SECS seconds. If no command line args are 
specified, use 30 for both values.

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated. One -v displays a 
    status message with sleep time.
  --version
    Print version information.

END
	exit 0
fi

minsecs=30
randsecs=30

test -n "$1" && minsecs="$1"
test -n "$2" && randsecs="$2"
if echo "$minsecs$randsecs" | tr -d '[0-9]' | grep -q .; then
	echo $progname: Arguments must be integer only >&2
	exit 1
fi

test $randsecs -eq 0 && randsecs=1
secs=$(($minsecs + $RANDOM % $randsecs))
test $opt_verbose -ge 1 && echo -n $(date +%H:%M:%S) sleep $secs...
sleep $secs
test $opt_verbose -ge 1 && echo done

# vim: set ts=8 sw=8 sts=8 noet fo+=w tw=79 fenc=UTF-8 :
