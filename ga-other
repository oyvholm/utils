#!/bin/bash

#=======================================================================
# ga-other
# File ID: 8ccdcd38-f1c3-11e3-96ba-c80aa9e67bbd
#
# Read filenames from stdin and store the git-annex key to 
# /kopiert-annex/$1. For documenting where I got files from or who I've 
# given a copy to. If all copies should be destroyed (FSM forbid) I know 
# where to get another copy. Example:
#
# ls | ga-other Some_Bloke
# find -type l | ga-other Another_Bloke
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=ga-other
VERSION=0.1.0

ARGS="$(getopt -o "hqv" -l "help,quiet,verbose,version" \
    -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        (-h|--help) opt_help=1; shift ;;
        (-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        (-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        (--version) echo $progname $VERSION; exit 0 ;;
        (--) shift; break ;;
        (*) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Read filenames from stdin and store the git-annex key to 
/kopiert-annex/$1. For documenting where I got files from or who I've 
given a copy to. If all copies should be destroyed (FSM forbid) I know 
where to get another copy. Example:

ls | ga-other Some_Bloke
find -type l | ga-other Another_Bloke

Usage: $progname [options]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

test -z "$1" && { echo $progname: Name not specified >&2; exit 1; }
topdir="$(git rev-parse --show-toplevel)"
kopidir="$topdir/kopiert-annex"
test -d "$kopidir" || mkdir "$kopidir" || \
    { echo $progname: $kopidir: Cannot create directory >&2; exit 1; }
filename="$1.txt"
destfile="$kopidir/$filename"

while read f; do
    key=$(git annex lookupkey "$f")
    test -n "$key" && echo "$key" >>"$destfile"
done

sort -u "$destfile" >"$destfile.tmp"
mv "$destfile.tmp" "$destfile"
