#!/usr/bin/env perl

#=======================================================================
# wav_to_flac
# File ID: 4507db62-f744-11dd-bbaa-000475e441b9
# [Description]
#
# Character set: UTF-8
# ©opyleft 2008– Øyvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later, see end of 
# file for legal stuff.
#=======================================================================

use strict;
use warnings;
use Getopt::Long;

$| = 1;

our $Debug = 0;

our %Opt = (

    'album' => "",
    'artist' => "",
    'debug' => 0,
    'force' => 0,
    'genre' => "",
    'help' => 0,
    'releasedate' => "",
    'title' => "",
    'tracknumber' => "",
    'verbose' => 0,
    'version' => 0,

);

our $progname = $0;
$progname =~ s/^.*\/(.*?)$/$1/;
our $VERSION = "0.00";

Getopt::Long::Configure("bundling");
GetOptions(

    "album|a=s" => \$Opt{'album'},
    "artist|A=s" => \$Opt{'artist'},
    "debug" => \$Opt{'debug'},
    "force|f" => \$Opt{'force'},
    "genre|g=s" => \$Opt{'genre'},
    "help|h" => \$Opt{'help'},
    "releasedate|r=s" => \$Opt{'releasedate'},
    "title|t=s" => \$Opt{'title'},
    "tracknumber|n=s" => \$Opt{'tracknumber'},
    "verbose|v+" => \$Opt{'verbose'},
    "version" => \$Opt{'version'},

) || die("$progname: Option error. Use -h for help.\n");

$Opt{'debug'} && ($Debug = 1);
$Opt{'help'} && usage(0);
if ($Opt{'version'}) {
    print_version();
    exit(0);
}

my $Lh = "[0-9a-fA-F]";
my $v1_templ = "$Lh\{8}-$Lh\{4}-1$Lh\{3}-$Lh\{4}-$Lh\{12}";

my $wav_file;

if (defined($ARGV[0])) {
    $wav_file = $ARGV[0];
} else {
    die("$progname: No .wav file specified\n");
}

(!-r $wav_file) &&
    die("$progname: $wav_file: Cannot read file: $!\n");

(-d $wav_file) &&
    die("$progname: $wav_file: Is a directory\n");

my $out_file = $wav_file;
$out_file =~ s/^(.*)\.wav$/$1.flac/i;

if (-e $out_file) {
    if ($Opt{'force'}) {
        unlink($out_file) || die("$progname: $out_file: Cannot delete file: $!\n");
    } else {
        die("$progname: $out_file: File already exists, use -f / --force to overwrite\n");
    }
}

my $flac_version = `flac --version`;
$flac_version =~ s/^\s+//;
$flac_version =~ s/\s+$//;

my @Params = "flac";

length($Opt{'album'}) && push(@Params, tag_string("ALBUM", $Opt{'album'}));
length($Opt{'artist'}) && push(@Params, tag_string("ARTIST", $Opt{'artist'}));

my $esc_wav_file = shell_escape($wav_file);
chomp(my $suuid_str = `suuid -m -t encode -w eo -c "$progname $esc_wav_file - $flac_version"`);
if (!defined($suuid_str) || $suuid_str !~ /^$v1_templ$/) {
    die("$progname: suuid error\n");
}
push(@Params, "-TENC_ID=$suuid_str");
push(@Params, "-TENCODED_WITH=$flac_version");

length($Opt{'genre'}) && push(@Params, tag_string("GENRE", $Opt{'genre'}));
length($Opt{'releasedate'}) && push(@Params, tag_string("RELEASEDATE", $Opt{'releasedate'}));
length($Opt{'title'}) && push(@Params, tag_string("TITLE", $Opt{'title'}));
length($Opt{'tracknumber'}) && push(@Params, tag_string("TRACKNUMBER", $Opt{'tracknumber'}));

push(@Params, sprintf("%s", $wav_file));

msg(1, join(" ", @Params));
system(@Params);

sub tag_string {
    # {{{
    # Return parameter for use with flac(1)
    my ($Label, $Val) = @_;
    my $Retval = "-T$Label=$Val";
    return($Retval);
    # }}}
} # tag_string()

sub shell_escape {
    # {{{
    my $Txt = shift;
    $Txt =~ s/"/\\"/g;
    $Txt =~ s/\$/\\\$/g;
    $Txt =~ s/!/\\!/g;
    $Txt =~ s/`/\\`/g;
    return($Txt);
    # }}}
} # shell_escape()

sub print_version {
    # Print program version {{{
    print("$progname v$VERSION\n");
    # }}}
} # print_version()

sub usage {
    # Send the help message to stdout {{{
    my $Retval = shift;

    if ($Opt{'verbose'}) {
        print("\n");
        print_version();
    }
    print(<<END);

Usage: $progname [options] wav_file

Convert .wav to .flac .

Options:

  -a X, --album X
    Name of music album.
  -A X, --artist X
    Name of artist/group.
  -f, --force
    Overwrite existing files.
  -g X, --genre X
    Music genre.
  -h, --help
    Show this help.
  -n X, --tracknumber X
    Track number of this song.
  -r X, --releasedate X
    The date the album was released.
  -t X, --title X
    Title of song.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.
  --debug
    Print debugging messages.

END
    exit($Retval);
    # }}}
} # usage()

sub msg {
    # Print a status message to stderr based on verbosity level {{{
    my ($verbose_level, $Txt) = @_;

    if ($Opt{'verbose'} >= $verbose_level) {
        print(STDERR "$progname: $Txt\n");
    }
    # }}}
} # msg()

sub D {
    # Print a debugging message {{{
    $Debug || return;
    my @call_info = caller;
    chomp(my $Txt = shift);
    my $File = $call_info[1];
    $File =~ s#\\#/#g;
    $File =~ s#^.*/(.*?)$#$1#;
    print(STDERR "$File:$call_info[2] $$ $Txt\n");
    return("");
    # }}}
} # D()

__END__

# Plain Old Documentation (POD) {{{

=pod

=head1 NAME



=head1 SYNOPSIS

 [options] [file [files [...]]]

=head1 DESCRIPTION



=head1 OPTIONS

=over 4

=item B<-h>, B<--help>

Print a brief help summary.

=item B<-v>, B<--verbose>

Increase level of verbosity. Can be repeated.

=item B<--version>

Print version information.

=item B<--debug>

Print debugging messages.

=back

=head1 BUGS



=head1 AUTHOR

Made by Øyvind A. Holm S<E<lt>sunny@sunbase.orgE<gt>>.

=head1 COPYRIGHT

Copyleft © Øyvind A. Holm E<lt>sunny@sunbase.orgE<gt>
This is free software; see the file F<COPYING> for legalese stuff.

=head1 LICENCE

This program is free software: you can redistribute it and/or modify it 
under the terms of the GNU General Public License as published by the 
Free Software Foundation, either version 2 of the License, or (at your 
option) any later version.

This program is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along 
with this program.
If not, see L<http://www.gnu.org/licenses/>.

=head1 SEE ALSO

=cut

# }}}

# vim: set fenc=UTF-8 ft=perl fdm=marker ts=4 sw=4 sts=4 et fo+=w :
