#!/bin/bash

#=======================================================================
# ga
# File ID: e89047ce-29d1-11e2-bb6f-00c0a8deee11
#=======================================================================

progname=ga

if test "$1" = "init"; then
    if test -z "$(git config --get annex.uuid)"; then
        git config annex.uuid $(suuid -wa -t ga_init)
    else
        echo $progname: Repository is already initialised for git-annex >&2
        exit 1
    fi
else
    test -z "$(git config --get annex.uuid)" && { echo $progname: annex.uuid is not defined, aborting >&2; exit 1; }
fi

if test "$1" = "sync"; then
    git wait-until-clean -u
fi

if test "$1" = "fsck"; then
    shift
    git-annex fsck "$@" 2>&1 | ga-fsck-size
elif test "$1" = "md"; then
    shift
    git-annex metadata "$@"
elif test "$1" = "unused"; then
    shift
    git-annex unused "$@" | ga-sumsize
else
    git-annex "$@"
fi

# Check that "git annex pre-commit ." is commented out in 
# .git/hooks/pre-commit, I don't want to let "git commit" run "git annex 
# fix" automatically when I've moved files around. I want to be able to 
# track moves, and it breaks "git log --follow". If it's not disabled, 
# do it automatically.
precommit="$(git rev-parse --show-toplevel)/.git/hooks/pre-commit"
if test -f "$precommit"; then
    grep -q '^git.*annex.*pre-commit' "$precommit" && {
        perl -p -i -e 's/^(git.annex.+pre-commit)/# $1/' "$precommit"
        echo $progname: $precommit: Have disabled git annex pre-commit: >&2
        cat "$precommit" >&2
    }
fi
