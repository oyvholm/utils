#!/bin/bash

#=======================================================================
# ga-getnew
# File ID: 8af4d956-f358-11e4-b717-000df06acc56
#
# Get new files from the last month (can be overridden) that haven't got 
# enough copies in git-annex yet, then execute a fast fsck to check that 
# the files have enough copies.
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=ga-getnew
VERSION=0.2.0

ARGS="$(getopt -o "\
h\
q\
v\
" -l "\
from:,\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_from=''
opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        (--from) opt_from="$2"; shift 2 ;;
        (-h|--help) opt_help=1; shift ;;
        (-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        (-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        (--version) echo $progname $VERSION; exit 0 ;;
        (--) shift; break ;;
        (*) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Get new files from the last month (can be overridden) that haven't got 
enough copies in git-annex yet, then execute a fast fsck to check that 
the files have enough copies.

Arguments and options after " -- " are delivered to git-allfiles(1) 
which delivers them further to "git log".

Usage: $progname [options] [ -- options_to_git-allfiles ]

Options:

  --from REMOTE
    Get new files from Git remote REMOTE.
  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

msg() {
    echo
    echo ==== $progname: $*
}

toplevel="$(git rev-parse --show-toplevel)"
cd "$toplevel" || {
    echo $progname: $toplevel: Cannot chdir to top of repo >&2
    exit 1
}

git wait-until-clean -u

# Using backslash before { and } to suppress folding when editing this 
# file.
msg ga sync \{\{\{
ga sync 2>&1
echo $progname: ga sync \}\}\}

if test -n "$opt_from"; then
    from_str=" --from=$opt_from"
else
    from_str=''
fi

msg ga get --auto$from_str
git allfiles --since=1.month "$@" |
    strip-nonexisting |
    xargs -d \\n --no-run-if-empty ga get --auto$from_str

msg git allfiles --since=1.month $*
msg ga fsck --fast --quiet
git allfiles --since=1.month "$@" |
    strip-nonexisting |
    xargs -d \\n --no-run-if-empty ga fsck --fast --quiet

msg ga sync \{\{\{
ga sync 2>&1
echo $progname: ga sync \}\}\}
