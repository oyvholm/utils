#!/bin/bash

#=======================================================================
# git-delete-old-branches
# File ID: b2a8aec0-3649-11e6-912b-02010e0a6634
#
# Delete obsolete Git branches after displaying some info about them
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=git-delete-old-branches
VERSION=0.2.1

ARGS="$(getopt -o "\
h\
q\
v\
" -l "\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        (-h|--help) opt_help=1; shift ;;
        (-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        (-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        (--version) echo $progname $VERSION; exit 0 ;;
        (--) shift; break ;;
        (*) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Delete obsolete Git branches locally and from all remotes. For each 
branch, display a "git diff --stat" against all local and remote 
branches with this name, a simplified --graph log, and finally a git log 
with patch against all branches. Display this in less(1), and ask if all 
branches with this name should be deleted. If the answer is "y", delete 
all branches with this name locally and from all remotes.

Usage: $progname [options] BRANCH [BRANCH [...]]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

listbr() {
    git br -a | rmspcall | grep -E "(^|/)$1\$"
}

unset LESS

for f in "$@"; do
    if test $opt_verbose -ge 1; then
        echo
        echo $progname: Check \"$f\" branches
        listbr "$f"
    fi
    listbr "$f" | grep -q . || continue
    clear
    (
        echo $f
        echo
        git diff --stat $(listbr "$f" | perl -pe 's/^/.../;')
        echo
        git log -C -C -M -M --abbrev-commit --decorate=short --format=oneline \
          --graph $(
            listbr "$f" | perl -pe 's/^/../;'
        )
        echo
        git log -C -C -M -M --date-order --date=iso --decorate=short \
          --format=fuller --graph -c -p $(listbr "$f" | perl -pe 's/^/../;')
    ) | less -S
    echo -n "Delete all '$f' branches? " >&2
    unset valg
    read valg
    if test "$valg" = "y"; then
        git dbr $(listbr "$f")
    fi
done
