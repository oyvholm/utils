#!/bin/bash

#=======================================================================
# pakkdir
# File ID: 5818b856-0ba9-11de-b2c1-000475e441b9
#
# Move a whole subdirectory tree into a single .pakka.tar.gz file.
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=pakkdir
VERSION=0.3.0

ARGS="$(getopt -o "\
h\
q\
s:\
v\
" -l "\
help,\
quiet,\
remove-files,\
split:,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_remove_files=0
opt_split=''
opt_verbose=0
while :; do
    case "$1" in
        (-h|--help) opt_help=1; shift ;;
        (-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        (--remove-files) opt_remove_files=1; shift ;;
        (-s|--split) opt_split="$2"; shift 2 ;;
        (-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        (--version) echo $progname $VERSION; exit 0 ;;
        (--) shift; break ;;
        (*) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Move a whole subdirectory tree into a single .pakka.tar.gz file.

Usage: $progname [options] DIRECTORY [DIRECTORIES [...]]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  --remove-files
    Remove files in DIRECTORY immediately after they've been added to 
    the archive. Can be used when there's not enough disk space for the 
    archive.
  -s SIZE, --split SIZE
    Split the .tar file into files with SIZE bytes each. Allowed values 
    are those understood by the -b/--bytes option in split(1). These 
    files are not compressed by default, to make it easier to extract 
    data from the files without starting from the beginning.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

if test "$opt_remove_files" = "1"; then
    rm_files_str="--remove-files"
else
    rm_files_str=""
fi

for f in "$@"; do
    echo Pakker $f...

    dir="$f"
    tarfile="$f.pakka.tar"
    targz="$tarfile.gz"

    echo dir = $dir
    echo targz = $targz

    if [ -e "$targz" ]; then
        echo "$targz finnes allerede" >&2
        exit 1
    fi

    if [ ! -d "$dir" ]; then
        echo "$dir: Er ikke en dir" >&2
    else
        echo "$dir" | grep -q / && { echo "$dir: Forbudt med slasher i filnavnet" >&2; exit 1; }

        uuid=`suuid -t pakkdir --raw -w eo -c "<c_pakkdir> <filename>$targz</filename> <host>$(hostname)</host> <directory>$(/bin/pwd)</directory> </c_pakkdir>"` || { echo $0: suuid error >&2; exit 1; }
        if test -n "$opt_split"; then
            echo ======= tar c $rm_files_str $dir \| split -b $opt_split --verbose - $tarfile.split_
            tar c $rm_files_str "$dir" | split -b $opt_split --verbose - "$tarfile.split_"
        else
            echo ======= tar czf $targz $rm_files_str $dir
            tar czf "$targz" $rm_files_str --label=$uuid "$dir"
            ls -la "$targz"
        fi
        # echo ======= Rensk
        # (cd "$dir" && find -type d -print0 -depth | xargs -0 rmdir )
        # echo ======= rmdir $dir
        # rmdir "$dir"
    fi
done
