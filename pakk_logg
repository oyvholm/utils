#!/bin/bash

#=======================================================================
# pakk_logg
# File ID: 7bd794f8-5551-11e0-942f-b7ae6f27caa2
#
# Compress script logs
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=pakk_logg
VERSION=0.2.0

ARGS="$(getopt -o "\
h\
q\
v\
" -l "\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        (-h|--help) opt_help=1; shift ;;
        (-q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        (-v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        (--version) echo $progname $VERSION; exit 0 ;;
        (--) shift; break ;;
        (*) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Compress log files.

Usage: $progname [options]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

lockdir=~/.pakk_log.lock
mkdir "$lockdir" || { echo $0: $lockdir: Cannot create lockdir >&2; exit 1; }

myexit() {
    rmdir "$lockdir" || { echo $0: $lockdir: Cannot remove lockdir >&2; exit 1; }
    exit $1
}
trap "myexit 1" INT TERM

hname="$(hostname)"
dfdestdir="$HOME/annex/log/df/$hname"
dflog="$HOME/log/df.sqlite"

if test -f "$dflog"; then
    mkdir -p "$dfdestdir"
    cd "$dfdestdir" || {
        echo $progname: $dfdestdir: chdir error >&2
        myexit 1
    }
    if test -n "$(git status --porcelain df.sqlite)"; then
        echo $progname: $dfdestdir/df.sqlite is modified >&2
        myexit 1
    fi
    rm "$dfdestdir/df.sqlite"
    sqlite3 "$dflog" .dump | sqlite3 "$dfdestdir/df.sqlite"
fi

cd ~/log/script || { echo $0: ~/log/script: Unable to chdir >&2; exit 1; }
find -type f | grep -E '\.(scrlog|timing)$' | while read f; do
    uuid=$(echo "$f" | finduuid)
    ps auxw | grep -v "grep $uuid" | grep $uuid | grep -q . || gzip -v "$f"
done

ircdir=$HOME/log/irc

if test -d "$ircdir/."; then
    cd "$ircdir" || { echo $0: $ircdir: Unable to chdir >&2; exit 1; }
    currdate=`date +"%Y-%m-%d"`
    find -type f -name '*.log' -print0 | grep -vz "$currdate" | xargs -0r gzip -v
fi

myexit 0
