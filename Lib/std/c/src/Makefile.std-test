# Makefile.std-test
# File ID: 58135bdc-83bb-11e9-8b21-4f45262dc9b5

TMP=compile.tmp
TMPUUIDS=uuids.tmp

.PHONY: all
all:
	cd t && $(MAKE) -f Makefile.std-test $@

.PHONY: clean
clean:
	$(MAKE) -f Makefile clean
	rm -f STDexecDTS STDexecDTS.o STDexecDTS.c STDexecDTS.h selftest.o
	rm -f STDexecDTS.1.man
	rm -f STDprognameDTS
	rm -f *.gcda *.gcno *.gcov
	rm -f version.h
	rm -rf $(TMP) $(TMPUUIDS)
	cd t && $(MAKE) -f Makefile.std-test $@

.PHONY: demo
demo:
	rm -rf $(TMP)
	git init $(TMP) >&2
	test -d $(TMP)/.git
	cd $(TMP) && git commit --allow-empty -m "Empty start commit" >&2
	mkdir -p $(TMPUUIDS) $(TMP)
	cd $(TMP) \
	&& SUUID_LOGDIR=$$(pwd)/../$(TMPUUIDS) \
	   ../../../../../create_cproject jada >&2
	cd $(TMP) && git add .gitignore COPYING Makefile README.md src
	cd $(TMP) && git commit -m "create_cproject jada" >&2
	cd $(TMP) && test -z "$$(git ls-files --exclude-standard -o)"
	cd $(TMP)/src && $(MAKE)
	[ -e $(TMP)/src/jada ]
	[ -e $(TMP)/src/jada.1 ]

.PHONY: test
test:
	rm -f STDexecDTS.c STDexecDTS.h
	ln -sf std.h STDexecDTS.h
	ln -sf std.c STDexecDTS.c
	ln -sf std.1.man STDexecDTS.1.man
	rm -f STDprognameDTS
	ln -sf STDexecDTS STDprognameDTS
	$(MAKE) clean
	$(MAKE) testsrc
	$(MAKE)
	./STDexecDTS
	$(MAKE) -f Makefile.std-test demo
	cd $(TMP)/src && $(MAKE) test
	cd $(TMP)/src && $(MAKE) testall
	cd $(TMP)/src && ./jada --version | grep "has NDEBUG" \
	&& exit 1 \
	|| exit 0
	cd $(TMP) && test -z "$$(git ls-files --exclude-standard -o)"
	if valgrind --version 2>/dev/null | grep -q ^valgrind; then \
		$(MAKE) -f Makefile.std-test test-valgrind || exit 1; \
	else \
		echo "# Skip Valgrind tests, it's not installed here"; \
		cd $(TMP)/src && $(MAKE) clean test NDEBUG=1 || exit 1; \
	fi
	cd $(TMP)/src && ./jada --version | grep -q "has NDEBUG"
	if cc --version | grep -q "Free Software Foundation"; then \
		$(MAKE) -f Makefile.std-test test-prof || exit 1; \
	else \
		echo "# Skip profiling tests, no GNU cc here"; \
	fi
	cd $(TMP)/src && $(MAKE) clean all UNUSED=1
	cd $(TMP)/src && ./jada --version | grep -q "has UNUSED"
	if gcov --version 2>/dev/null | grep -q ^gcov; then \
		$(MAKE) -f Makefile.std-test test-gcov || exit 1; \
	else \
		echo "# gcov(1) not found, skip gcov tests"; \
	fi
	cd t && $(MAKE) -f Makefile.std-test test
	$(MAKE) -f Makefile clean test

.PHONY: test-gcov
test-gcov:
	cd $(TMP)/src && $(MAKE) tlok
	cd $(TMP)/src && $(MAKE) gcov
	test -e $(TMP)/src/jada
	test -e $(TMP)/src/jada.c.gcov
	test -e $(TMP)/src/jada.gcda
	test -e $(TMP)/src/jada.gcno
	test -e $(TMP)/src/selftest.c.gcov
	test -e $(TMP)/src/selftest.gcda
	test -e $(TMP)/src/selftest.gcno
	cd $(TMP)/src && $(MAKE) gcov 2>&1 | grep -q '^2 untested lines'
	cd $(TMP)/src && $(MAKE) clean test gcov
	cd $(TMP)/src && $(MAKE) gcov-cmt
	cd $(TMP)/src && test "$$(git diff HEAD | wc -l)" = "20"
	cd $(TMP)/src && $(MAKE) gcov-cmt-clean

.PHONY: test-prof
test-prof:
	cd $(TMP)/src && $(MAKE) clean all PROF=1
	cd $(TMP)/src && ./jada --version | grep -q "has PROF"
	test -e $(TMP)/src/gmon.out
	cd $(TMP)/src && $(MAKE) test
	test -e $(TMP)/src/t/gmon.out

.PHONY: test-valgrind
test-valgrind:
	cd $(TMP)/src && $(MAKE) clean valgrind
	cd $(TMP)/src && $(MAKE) clean valgrind NDEBUG=1
