#!/usr/bin/env bash

#=======================================================================
# logging
# File ID: af318500-fb9b-11dd-bb0f-000475e441b9
#
# Log the current terminal session with script(1)
#
# Author: Ã˜yvind A. Holm <sunny@sunbase.org>
# License: GNU General Public License version 2 or later.
#=======================================================================

progname=logging
VERSION=0.1.2

ARGS="$(getopt -o "\
h\
q\
v\
" -l "\
help,\
quiet,\
verbose,\
version,\
" -n "$progname" -- "$@")"
test "$?" = "0" || exit 1
eval set -- "$ARGS"

opt_help=0
opt_quiet=0
opt_verbose=0
while :; do
    case "$1" in
        -h|--help) opt_help=1; shift ;;
        -q|--quiet) opt_quiet=$(($opt_quiet + 1)); shift ;;
        -v|--verbose) opt_verbose=$(($opt_verbose + 1)); shift ;;
        --version) echo $progname $VERSION; exit 0 ;;
        --) shift; break ;;
        *) echo $progname: Internal error >&2; exit 1 ;;
    esac
done
opt_verbose=$(($opt_verbose - $opt_quiet))

export LOGDIR=$HOME/log/script/`date -u +"%Y/%m"`

if test "$opt_help" = "1"; then
    test $opt_verbose -gt 0 && { echo; echo $progname $VERSION; }
    cat <<END

Log the current terminal session with script(1) to
"$LOGDIR/".

Usage: $progname [options] [SESSION_NAME]

Options:

  -h, --help
    Show this help.
  -q, --quiet
    Be more quiet. Can be repeated to increase silence.
  -v, --verbose
    Increase level of verbosity. Can be repeated.
  --version
    Print version information.

END
    exit 0
fi

hex="[0-9A-Fa-f]"
v1_templ="$hex{8}-$hex{4}-1$hex{3}-$hex{4}-$hex{12}";

scriptprocs() {
    ps auxw | grep -E "script .*/[0-9]{8}T[0-9]{6}Z\.$v1_templ\.$1\.scrlog"
}

kill_dups() {
    local pids=$(scriptprocs $1 | tr -s ' ' | cut -f 2 -d ' ')
    kill $pids
}

host=$1
test -z "$host" && host=$([ -f ~/.compname ] && cat ~/.compname || hostname)

runcheck="$(scriptprocs $host)"
if [ -n "$runcheck" ]; then
    scrcount=$(echo "$runcheck" | wc -l)
    if [ "$scrcount" = "1" ]; then
        pl_s=""
        pl_are="is"
        pl_them="it"
    else
        pl_s="s"
        pl_are="are"
        pl_them="them"
    fi
    echo -n $progname: $scrcount >&2
    echo " typescript$pl_s with the same name $pl_are already running" >&2
    echo -n "Kill $pl_them? " >&2
    while :; do
        echo -n "[y/n]: " >&2
        read choice
        [ "$choice" = "y" ] && { kill_dups $host; break; }
        [ "$choice" = "n" ] && break
    done
fi

[ -d $LOGDIR/. ] || mkdir -p $LOGDIR || { echo logging: $LOGDIR: Cannot create log directory >&2; exit 1; }
export LDATE=`u`
uuid=`suuid -t logging -w eo -c "logging $host"` || { echo logging: Error when generating UUID, logging not started >&2; exit 1; }
export LNAME="$LOGDIR/$LDATE.$uuid.$host"
SESS_UUID="${SESS_UUID}logging/$uuid," script -ft $LNAME.scrlog 2>$LNAME.timing
suuid -w e -t logging -c "Loggsession $uuid ferdig."
echo "Loggsession $uuid ferdig." >&2
